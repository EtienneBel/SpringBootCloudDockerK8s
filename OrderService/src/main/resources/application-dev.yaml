server:
  port: 8082

spring:
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:3306/orderDb?allowPublicKeyRetrieval=false&serverTimezone=UTC
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: update
  application:
    name: ORDER-SERVICE
  config:
    import: configserver:http://${CONFIG_SERVER_URL:localhost}:9296
  security:
    oauth2:
      resource-server:
        jwt:
          issuer-uri: ${AUTH0_ISSUER_URI}
          audiences: ${AUTH0_AUDIENCE:http://springboot-microservices-api}
      client:
        registration:
          internal-client:
            provider: auth0
            authorization-grant-type: client_credentials
            scope: openid,profile,email
            client-id: ${AUTH0_M2M_CLIENT_ID}
            client-secret: ${AUTH0_M2M_CLIENT_SECRET}
        provider:
          auth0:
            issuer-uri: ${AUTH0_ISSUER_URI}
            token-uri: ${AUTH0_ISSUER_URI}oauth/token
      resourceserver:
        opaquetoken:
          client-id: ${AUTH0_M2M_CLIENT_ID}
          client-secret: ${AUTH0_M2M_CLIENT_SECRET}
          introspection-uri: ${AUTH0_ISSUER_URI}oauth/introspect
    cloud:
      openfeign:
        oauth2:
          clientRegistrationId: internal-client
          audience: ${AUTH0_AUDIENCE:http://springboot-microservices-api}
    allow-bean-definition-overriding: true

eureka:
  instance:
    preferIpAddress: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_SERVER_ADDRESS:http://localhost:8761/eureka}

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html